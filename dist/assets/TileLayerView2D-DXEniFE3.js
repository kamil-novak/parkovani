import{cs as w,ct as y,cu as I,cv as V,cw as H,c6 as v,T,cq as o,cx as g,ai as q,a7 as n,a8 as f,ab as U}from"./index-DxNBHqwQ.js";import"./floatRGBA-BUjz_4P-.js";import"./UpdateTracking2D-N_Oy5TP_.js";import"./GeometryUtils-DgHLWx6N.js";import"./CIMSymbolHelper-CLywenkq.js";import"./Container-D6VBWkX7.js";import"./WGLContainer-Chfu6CPS.js";import"./Program-DHD5Dc9u.js";import"./LabelMetric-BJxGBSK7.js";import"./StyleDefinition-CIWz1AwN.js";import"./enums-BRzLM11V.js";import"./GridShader-B--5o-A3.js";import"./FeatureCommandQueue-CRn9znbx.js";import"./PieChartMeshWriter-AlE4hh1x.js";import"./renderState-Bv_asOLL.js";import"./interfaces-DDtDqZYj.js";import"./testSVGPremultipliedAlpha-wwxWP0b1.js";import{F as b}from"./GraphicsView2D-DfXFOj2g.js";import"./earcut-Lltz9D9k.js";import"./vec3f32-nZdmKIgz.js";import{r as C,o as c,n as d}from"./imageUtils-BxotPRC7.js";import{j as Q,y as S}from"./LayerView-25lrbk4A.js";import{h as $}from"./HighlightGraphicContainer-BI2v_ejb.js";import{i as F}from"./RefreshableLayerView-DXiYIOXc.js";import{_ as P,R as L}from"./MapServiceLayerViewHelper-C_IPt_Sc.js";import{r as k}from"./drapedUtils-PpePH6uP.js";import"./BindType-BmZEZMMh.js";import"./Util-CPPHQiQu.js";import"./BidiEngine-DNnuvc1i.js";import"./fontUtils-p_-8gu0q.js";import"./Rect-CUzevAry.js";import"./BoundingBox-BnWbEy-B.js";import"./BufferObject-DMCEvSrv.js";import"./VertexArrayObject-CYbmzodz.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./ProgramTemplate-C_gmO3Xy.js";import"./config-MDUrh2eL.js";import"./featureConversionUtils-B5eK7gxb.js";import"./CircularArray-CujHzHWW.js";import"./AttributeStore-ByycQtcM.js";import"./timeSupport-DTZ420-Z.js";import"./queryUtils-C0Fwzj-N.js";import"./json-Wa8cmqdu.js";import"./constants-F8oTIn7N.js";import"./TurboLine-DQB87QLZ.js";import"./basicInterfaces-CZwQPxTp.js";import"./normalizeUtilsSync-BTFvDzwr.js";import"./Bitmap-BsObOeL4.js";import"./TileContainer-uy3t2SWR.js";import"./AGraphicContainer-CzGUuqO9.js";import"./TechniqueInstance-BoI8DBX-.js";import"./languageUtils-DhJkOif7.js";import"./ImmutableArray-BPVd6ESQ.js";import"./number-CkZbmABm.js";import"./popupUtils-Dr0V5Mdj.js";const E=[0,0];let a=class extends F(C(Q(S))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new w,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}get tilemapCache(){return"tilemapCache"in this.layer?this.layer.tilemapCache:null}update(e){var t;this._fetchQueue.pause(),this._fetchQueue.state=e.state,this._tileStrategy.update(e),this._fetchQueue.resume(),(t=this._highlightView)==null||t.processUpdate(e)}attach(){const e="tileServers"in this.layer?this.layer.tileServers:null,t=this.tilemapCache;if(this._tileInfoView=new y(this.layer.tileInfo,this.layer.fullExtent,t==null?void 0:t.effectiveMinLOD,t==null?void 0:t.effectiveMaxLOD),this._fetchQueue=new I({tileInfoView:this._tileInfoView,concurrency:e&&10*e.length||10,process:(i,r)=>this.fetchTile(i,r),scheduler:this.scheduler,priority:V.MAPVIEW_FETCH_QUEUE}),this._tileStrategy=new H({cachePolicy:"keep",resampling:this.resampling,acquireTile:i=>this.acquireTile(i),releaseTile:i=>this.releaseTile(i),tileInfoView:this._tileInfoView}),P(this,this.layer)){const i=this._highlightView=new b({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new $(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new L({createFetchPopupFeaturesQueryGeometry:(r,s)=>k(r,s,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(r,s)=>{i.graphicUpdateHandler({graphic:r,property:s})},layerView:this,updatingHandles:this._updatingHandles})}this.requestUpdate(),this.addAttachHandles(this._updatingHandles.add(()=>this.resampling,()=>{this.doRefresh()})),super.attach()}detach(){var e,t;super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),(e=this._popupHighlightHelper)==null||e.destroy(),(t=this._highlightView)==null||t.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeaturesAtLocation(e,t){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeaturesAtLocation(e,t):[]}highlight(e){return this._popupHighlightHelper?this._popupHighlightHelper.highlight(e):v()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(e){var t;return T((t=this.layer.tileInfo)==null?void 0:t.spatialReference,e)}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(e=>this._updatingHandles.addPromise(this._enqueueTileFetch(e)))}}acquireTile(e){const t=this._bitmapView.createTile(e),i=t.bitmap;return[i.x,i.y]=this._tileInfoView.getTileCoords(E,t.key),i.resolution=this._tileInfoView.getTileResolution(t.key),[i.width,i.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(t)),this._bitmapView.addChild(t),this.requestUpdate(),t}releaseTile(e){this._fetchQueue.abort(e.key.id),this._bitmapView.removeChild(e),e.once("detach",()=>e.destroy()),this.requestUpdate()}async fetchTile(e,t={}){const i=this.tilemapCache,{signal:r,resamplingLevel:s=0}=t;if(!i)try{return await this._fetchImage(e,r)}catch(h){if(!o(h)&&!this.resampling)return c(this._tileInfoView.tileInfo.size);if(s<3){const u=this._tileInfoView.getTileParentId(e.id);if(u){const m=new g(u),_=await this.fetchTile(m,{...t,resamplingLevel:s+1});return d(this._tileInfoView,_,m,e)}}throw h}const l=new g(0,0,0,0);let p;try{if(await i.fetchAvailabilityUpsample(e.level,e.row,e.col,l,{signal:r}),!this.resampling&&l.level!==e.level)return c(this._tileInfoView.tileInfo.size);p=await this._fetchImage(l,r)}catch(h){if(o(h))throw h;return c(this._tileInfoView.tileInfo.size)}return this.resampling?d(this._tileInfoView,p,l,e):p}async _enqueueTileFetch(e){if(!this._fetchQueue.has(e.key.id)){try{const t=await this._fetchQueue.push(e.key);e.bitmap.source=t,e.bitmap.width=this._tileInfoView.tileInfo.size[0],e.bitmap.height=this._tileInfoView.tileInfo.size[1],e.once("attach",()=>this.requestUpdate())}catch(t){o(t)||q.getLogger(this).error(t)}this.requestUpdate()}}async _fetchImage(e,t){return this.layer.fetchImageBitmapTile(e.level,e.row,e.col,{signal:t})}};n([f()],a.prototype,"resampling",null),n([f()],a.prototype,"tilemapCache",null),a=n([U("esri.views.2d.layers.TileLayerView2D")],a);const xe=a;export{xe as default};
