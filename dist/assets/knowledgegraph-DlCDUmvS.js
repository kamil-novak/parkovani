const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./knowledgeGraphService-DE_BeaCQ.js","./index-BkgwewGo.js","./index-D6MmE7Y6.css","./GraphQueryStreaming-MpgOZn30.js"])))=>i.map(i=>d[i]);
import{C as x,_ as k,ar as C,bL as J,bM as K,bN as M,f as I,p as V,n as L,S as Q,fv as P,R as j,fx as O}from"./index-BkgwewGo.js";import{a as T,b as u,r as f,I as U,m as W,G as y,ab as H,P as X,N as D,U as _,A as z,E as A,X as E,w as B,v as Y,ac as Z,ad as N,ae as $}from"./arcadeUtils-BiBa9EBg.js";import{l as tt}from"./portalUtils-DC8_b6x7.js";import{s as nt,m as et,t as rt,p as at,c as it}from"./GraphQueryStreaming-MpgOZn30.js";import"./TimeOnly-Dgk-lK6N.js";import"./ImmutableArray-BPVd6ESQ.js";import"./number-CGsbUJsm.js";import"./featureConversionUtils-Cyq484pm.js";import"./OptimizedFeature-7juV2tZm.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";let c=null;async function ot(t){const n=C.geometryServiceUrl??"";if(!n){J()||await K();for(const e of t)e.container[e.indexer]=M(e.container[e.indexer],I.WGS84);return}const r=t.map(e=>e.container[e.indexer]),i=new V({geometries:r,outSpatialReference:I.WGS84}),s=await L(n,i);for(let e=0;e<s.length;e++){const a=t[e];a.container[a.indexer]=s[e]}}async function G(t,n){const r=new Q({portal:t,id:n});return await r.load(),c===null&&(c=await k(()=>import("./knowledgeGraphService-DE_BeaCQ.js").then(i=>i.k),__vite__mapDeps([0,1,2,3]),import.meta.url)),await c.fetchKnowledgeGraph(r.url)}function R(t,n,r,i,s){if(t===null)return null;if(y(t)||A(t))return t;if(E(t)||E(t))return t.toJSDate();if(B(t))return t.toStorageFormat();if(Y(t))return t.toStorageString();if(Z(t)){const e={};for(const a of t.keys())e[a]=R(t.field(a),n,r,i,s),e[a]instanceof P&&s.push({container:e,indexer:a});return e}if(_(t)){const e=t.map(a=>R(a,n,r,i,s));for(let a=0;a<e.length;a++)e[a]instanceof P&&s.push({container:e,indexer:a});return e}return N(t)?t.spatialReference.isWGS84?t:t.spatialReference.isWebMercator&&n?j(t):t:void 0}function st(t,n){if(!t)return t;if(t.spatialReference.isWGS84&&n.spatialReference.isWebMercator)return O(t);if(t.spatialReference.equals(n.spatialReference))return t;throw new u(n,f.WrongSpatialReference,null)}function S(t,n){if(!t)return null;const r={};for(const i in t)r[i]=g(t[i],n);return r}function g(t,n){return t===null?null:_(t)?t.map(r=>g(r,n)):t instanceof et?{graphTypeName:t.typeName,id:t.id,graphType:"entity",properties:S(t.properties,n)}:t instanceof rt?{graphType:"object",properties:S(t.properties,n)}:t instanceof at?{graphTypeName:t.typeName,id:t.id,graphType:"relationship",originId:t.originId??null,destinationId:t.destinationId??null,properties:S(t.properties,n)}:t instanceof it?{graphType:"path",path:t.path?t.path.map(r=>g(r,n)):null}:N(t)?st(t,n):y(t)||A(t)||$(t)?t:null}function vt(t){t.mode==="async"&&(t.functions.knowledgegraphbyportalitem=function(n,r){return t.standardFunctionAsync(n,r,(i,s,e)=>{var m,d;if(T(e,2,2,n,r),e[0]===null)throw new u(n,f.PortalRequired,r);if(e[0]instanceof U){const p=W(e[1]);let h;return h=(m=n.services)!=null&&m.portal?n.services.portal:x.getDefault(),G(tt(e[0],h),p)}if(y(e[0])===!1)throw new u(n,f.InvalidParameter,r);const a=W(e[0]);return G(((d=n.services)==null?void 0:d.portal)??x.getDefault(),a)})},t.signatures.push({name:"knowledgegraphbyportalitem",min:2,max:2}),t.functions.querygraph=function(n,r){return t.standardFunctionAsync(n,r,async(i,s,e)=>{var b;T(e,2,4,n,r);const a=e[0];if(!H(a))throw new u(n,f.InvalidParameter,r);const m=e[1];if(!y(m))throw new u(n,f.InvalidParameter,r);c===null&&(c=await k(()=>import("./knowledgeGraphService-DE_BeaCQ.js").then(o=>o.k),__vite__mapDeps([0,1,2,3]),import.meta.url));let d=null;const p=X(e[2],null);if(!(p instanceof D||p===null))throw new u(n,f.InvalidParameter,r);if(p){let o=[];d=R(p,!0,!1,n,o),o=o.filter(l=>!l.container[l.indexer].spatialReference.isWGS84),o.length>0&&await ot(o)}const h=new nt({openCypherQuery:m,bindParameters:d});(((b=a==null?void 0:a.serviceDefinition)==null?void 0:b.currentVersion)??11.3)>11.2&&(h.outputSpatialReference=n.spatialReference);const q=(await c.executeQueryStreaming(a,h)).resultRowsStream.getReader(),v=[];try{for(;;){const{done:o,value:l}=await q.read();if(o)break;if(_(l))for(const w of l)v.push(g(w,n));else{const w=[];for(const F of l)w.push(g(l[F],n));v.push(w)}}}catch(o){throw o}return D.convertJsonToArcade(v,z(n),!1,!0)})},t.signatures.push({name:"querygraph",min:2,max:4}))}export{vt as registerFunctions};
