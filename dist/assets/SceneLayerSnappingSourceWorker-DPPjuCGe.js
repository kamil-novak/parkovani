import{jx as f,e0 as _,dY as m,jy as j,jz as l,a7 as y,ab as v,ar as u,ak as x,jA as C,au as p}from"./index-DlYLAng9.js";import{v as L,b as P,j as S}from"./lineSegment-DGUkrBK2.js";import{Y as b}from"./Octree-DJA4oTEx.js";import{m as $}from"./edgeProcessing-C95r-tFW.js";import"./Util-U83NQdF9.js";import"./deduplicate-CeM2ZT6M.js";import"./Indices-Dt1mee1f.js";import"./InterleavedLayout-dLRV2bPJ.js";import"./BufferView-BZkdS9-S.js";import"./types-D0PSWh4d.js";import"./VertexAttribute-Cq4MnHjR.js";import"./glUtil-Qwn7SQT0.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./Normals-BGsWqzzQ.js";const I=1e3;function V(t,n,s){const o=j(),e=l(o);return f(e,e,t,.5),f(e,e,n,.5),o[3]=_(e,t),m(e,e,s),o}let g=class{constructor(){this._idToComponent=new Map,this._components=new b(t=>t.bounds),this._edges=new b(t=>t.bounds),this._tmpLineSegment=L(),this._tmpP1=u(),this._tmpP2=u(),this._tmpP3=u(),this.remoteClient=null}async fetchCandidates(t,n){await Promise.resolve(),x(n),await this._ensureEdgeLocations(t,n);const s=[];return this._edges.forEachNeighbor(o=>(this._addCandidates(t,o,s),s.length<I),t.bounds),{result:{candidates:s}}}async _ensureEdgeLocations(t,n){const s=[];if(this._components.forEachNeighbor(i=>{if(i.info==null){const{id:c,uid:r}=i;s.push({id:c,uid:r})}return!0},t.bounds),!s.length)return;const o={components:s},e=await this.remoteClient.invoke("fetchAllEdgeLocations",o,n??{});for(const i of e.components)this._setFetchEdgeLocations(i)}async add(t){const n=new h(t.id,t.bounds);return this._idToComponent.set(n.id,n),this._components.add([n]),{result:{}}}async remove(t){const n=this._idToComponent.get(t.id);if(n){const s=[];this._edges.forEachNeighbor(o=>(o.component===n&&s.push(o),!0),n.bounds),this._edges.remove(s),this._components.remove([n]),this._idToComponent.delete(n.id)}return{result:{}}}_setFetchEdgeLocations(t){const n=this._idToComponent.get(t.id);if(n==null||t.uid!==n.uid)return;const s=$.createView(t.locations),o=new Array(s.count),e=u(),i=u();for(let d=0;d<s.count;d++){s.position0.getVec(d,e),s.position1.getVec(d,i);const a=V(e,i,t.origin),E=new T(n,d,a);o[d]=E}this._edges.add(o);const{objectIds:c,origin:r}=t;n.info={locations:s,objectIds:c,origin:r}}_addCandidates(t,n,s){const{info:o}=n.component,{origin:e,objectIds:i}=o,c=o.locations,r=c.position0.getVec(n.index,this._tmpP1),d=c.position1.getVec(n.index,this._tmpP2);m(r,r,e),m(d,d,e);const a=i[c.componentIndex.get(n.index)];this._addEdgeCandidate(t,a,r,d,s),w(t,a,r,s),w(t,a,d,s)}_addEdgeCandidate(t,n,s,o,e){if(!t.returnEdge)return;const i=l(t.bounds),c=P(s,o,this._tmpLineSegment),r=S(c,i,this._tmpP3);C(t.bounds,r)&&e.push({type:"edge",objectId:n,target:p(r),distance:_(i,r),start:p(s),end:p(o)})}};g=y([v("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],g);const J=g;function w(t,n,s,o){if(!t.returnVertex||!C(t.bounds,s))return;const e=l(t.bounds);o.push({type:"vertex",objectId:n,target:p(s),distance:_(e,s)})}class h{constructor(n,s){this.id=n,this.bounds=s,this.info=null,this.uid=++h.uid}}h.uid=0;class T{constructor(n,s,o){this.component=n,this.index=s,this.bounds=o}}export{J as default};
