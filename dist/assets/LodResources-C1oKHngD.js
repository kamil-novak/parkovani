import{eQ as s}from"./index-UMzlneO_.js";import{r as c}from"./Geometry-CpvZ9OOp.js";import{e as a}from"./VertexAttribute-Cq4MnHjR.js";class f{constructor(e,t=null){this.geometry=e,this.textures=t}get material(){return this.geometry.material}get numTriangles(){return this.geometry instanceof c?this.geometry.indexCount/3:this.geometry.elementCount/3}}function m(r){return r instanceof c?r.attributes.get(a.POSITION).indices.length:r.elementCount}class g{constructor(e,t,n){this.components=e,this.minScreenSpaceRadius=t,this.pivotOffset=n;const i=s(this.components.map(o=>o.geometry));this.numVertices=i.reduce((o,u)=>o+m(u),0)}}class y{constructor(e){this.levels=e,this.levels.sort((t,n)=>t.minScreenSpaceRadius===n.minScreenSpaceRadius?t.numVertices-n.numVertices:t.minScreenSpaceRadius-n.minScreenSpaceRadius)}}function S(r){const e=[];return r.levels.forEach(t=>t.components.forEach(n=>e.push(n.geometry.material))),s(e)}function d(r){const e=new Array;return r.levels.forEach(t=>t.components.forEach(n=>{n.textures!=null&&e.push(...n.textures)})),s(e)}function v(r){const e=new Array;return r.levels.forEach(t=>t.components.forEach(n=>{n.geometry instanceof c&&e.push(n.geometry)})),s(e)}export{v as a,y as c,S as i,f as n,g as o,d as u};
