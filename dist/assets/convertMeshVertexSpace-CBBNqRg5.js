import{ak as p,s as m,aq as s}from"./index-Arlk-CID.js";import{p as n}from"./MeshVertexAttributes-CrMHT0y8.js";import{B as a}from"./vertexSpaceConversion-DAhcjH51.js";import"./meshProperties-C4iW0Ukm.js";import"./spatialReferenceEllipsoidUtils-BqfxEsyi.js";import"./computeTranslationToOriginAndRotation-CTAJP5wR.js";import"./meshVertexSpaceUtils-BcpR9R7T.js";import"./MeshLocalVertexSpace-RbnsZKyM.js";import"./vec3-C-UePtZD.js";import"./BufferView-AtbiSupa.js";import"./vec4-uUh-BIyV.js";async function V(t,o,r){await Promise.resolve(),p(r);const e=a(t,o,{useEllipsoid:r==null?void 0:r.useEllipsoid});if(!e)throw new m("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");const i=t.cloneAndModifyVertexAttributes(new n({...e,uv:s(t.vertexAttributes.uv),color:s(t.vertexAttributes.color)}),o);return i.transform=null,i}export{V as convertMeshVertexSpace};
