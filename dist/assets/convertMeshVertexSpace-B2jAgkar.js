import{ak as p,s as m,aq as s}from"./index-D1XG4HjB.js";import{p as n}from"./MeshVertexAttributes-CpVxdLHm.js";import{B as a}from"./vertexSpaceConversion-DSgIAMEb.js";import"./meshProperties-C4iW0Ukm.js";import"./spatialReferenceEllipsoidUtils-CLHu_UiY.js";import"./computeTranslationToOriginAndRotation-CBIlOqmC.js";import"./meshVertexSpaceUtils-B_bYMx8q.js";import"./MeshLocalVertexSpace-DfqsArRJ.js";import"./vec3-cCejGUPK.js";import"./BufferView-ydqOnvgn.js";import"./vec4-Hm5kumSE.js";async function V(t,o,r){await Promise.resolve(),p(r);const e=a(t,o,{useEllipsoid:r==null?void 0:r.useEllipsoid});if(!e)throw new m("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");const i=t.cloneAndModifyVertexAttributes(new n({...e,uv:s(t.vertexAttributes.uv),color:s(t.vertexAttributes.color)}),o);return i.transform=null,i}export{V as convertMeshVertexSpace};
