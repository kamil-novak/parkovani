import{eM as r,eN as a,eO as h,eP as e}from"./index-qIkxVHLE.js";class u{constructor(n,i,l){this.uid=n,this.geometry=i,this.attributes=l,this.visible=!0,this.objectId=null,this.centroid=null}}function m(s){return s.geometry!=null}class p{constructor(){this.exceededTransferLimit=!1,this.features=[],this.fields=[],this.hasM=!1,this.hasZ=!1,this.geometryType=null,this.objectIdFieldName=null,this.globalIdFieldName=null,this.geometryProperties=null,this.geohashFieldName=null,this.spatialReference=null,this.transform=null}}function y(s,n){switch(r(n),s.type==="mesh"&&(s=s.extent),s.type){case"point":n[0]=n[3]=s.x,n[1]=n[4]=s.y,s.hasZ&&(n[2]=n[5]=s.z);break;case"polyline":for(let i=0;i<s.paths.length;i++)a(n,s.paths[i],!!s.hasZ);break;case"polygon":for(let i=0;i<s.rings.length;i++)a(n,s.rings[i],!!s.hasZ);break;case"multipoint":a(n,s.points,!!s.hasZ);break;case"extent":n[0]=s.xmin,n[1]=s.ymin,n[3]=s.xmax,n[4]=s.ymax,s.zmin!=null&&(n[2]=s.zmin),s.zmax!=null&&(n[5]=s.zmax)}}function f(s,n){switch(h(n),s.type==="mesh"&&(s=s.extent),s.type){case"point":n[0]=n[2]=s.x,n[1]=n[3]=s.y;break;case"polyline":for(let i=0;i<s.paths.length;i++)e(n,s.paths[i]);break;case"polygon":for(let i=0;i<s.rings.length;i++)e(n,s.rings[i]);break;case"multipoint":e(n,s.points);break;case"extent":n[0]=s.xmin,n[1]=s.ymin,n[2]=s.xmax,n[3]=s.ymax}}function g(s,n){return s.objectId!=null?s.objectId:s.attributes&&n?s.attributes[n]:null}function x(s,n,i,l){if(n!=null&&n.size&&i!=null&&s)for(const t in s){if(!n.has(t))continue;const o=s[t];typeof o=="string"&&o.length>i&&(l(t),s[t]="")}}export{y as F,f as I,g as M,u as f,p as g,m as y,x as z};
