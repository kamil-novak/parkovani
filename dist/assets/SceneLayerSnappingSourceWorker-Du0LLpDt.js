import{hP as l,eE as _,er as h,a7 as v,ab as y,aV as p,ak as L,en as u}from"./index-BmtEbaAG.js";import{v as x,b as P,j}from"./lineSegment-CDpJOVbM.js";import{E as S,U as f,i as w}from"./sphere-Cw4eWHgs.js";import{Y as b}from"./Octree-CDE5kHXw.js";import{m as V}from"./edgeProcessing-DPbFjSCx.js";import"./plane-QWrzdEnV.js";import"./mat3f64-q3fE-ZOt.js";import"./mat4f64-CSKppSlJ.js";import"./quatf64-aQ5IuZRd.js";import"./Util-B05p6PfF.js";import"./deduplicate-D7faJoew.js";import"./Indices-B4G3gmNn.js";import"./InterleavedLayout-B5NiQkU_.js";import"./BufferView-1HwRgo65.js";import"./types-D0PSWh4d.js";import"./VertexAttribute-BdZWZuT1.js";import"./glUtil-CGtA0ZHn.js";import"./VertexElementDescriptor-BOD-G50G.js";const $=1e3;function I(t,o,n){const e=S(),s=f(e);return l(s,s,t,.5),l(s,s,o,.5),e[3]=_(s,t),h(s,s,n),e}let g=class{constructor(){this._idToComponent=new Map,this._components=new b(t=>t.bounds),this._edges=new b(t=>t.bounds),this._tmpLineSegment=x(),this._tmpP1=p(),this._tmpP2=p(),this._tmpP3=p(),this.remoteClient=null}async fetchCandidates(t,o){await Promise.resolve(),L(o),await this._ensureEdgeLocations(t,o);const n=[];return this._edges.forEachNeighbor(e=>(this._addCandidates(t,e,n),n.length<$),t.bounds),{result:{candidates:n}}}async _ensureEdgeLocations(t,o){const n=[];if(this._components.forEachNeighbor(i=>{if(i.info==null){const{id:c,uid:r}=i;n.push({id:c,uid:r})}return!0},t.bounds),!n.length)return;const e={components:n},s=await this.remoteClient.invoke("fetchAllEdgeLocations",e,o??{});for(const i of s.components)this._setFetchEdgeLocations(i)}async add(t){const o=new m(t.id,t.bounds);return this._idToComponent.set(o.id,o),this._components.add([o]),{result:{}}}async remove(t){const o=this._idToComponent.get(t.id);if(o){const n=[];this._edges.forEachNeighbor(e=>(e.component===o&&n.push(e),!0),o.bounds),this._edges.remove(n),this._components.remove([o]),this._idToComponent.delete(o.id)}return{result:{}}}_setFetchEdgeLocations(t){const o=this._idToComponent.get(t.id);if(o==null||t.uid!==o.uid)return;const n=V.createView(t.locations),e=new Array(n.count),s=p(),i=p();for(let d=0;d<n.count;d++){n.position0.getVec(d,s),n.position1.getVec(d,i);const a=I(s,i,t.origin),C=new T(o,d,a);e[d]=C}this._edges.add(e);const{objectIds:c,origin:r}=t;o.info={locations:n,objectIds:c,origin:r}}_addCandidates(t,o,n){const{info:e}=o.component,{origin:s,objectIds:i}=e,c=e.locations,r=c.position0.getVec(o.index,this._tmpP1),d=c.position1.getVec(o.index,this._tmpP2);h(r,r,s),h(d,d,s);const a=i[c.componentIndex.get(o.index)];this._addEdgeCandidate(t,a,r,d,n),E(t,a,r,n),E(t,a,d,n)}_addEdgeCandidate(t,o,n,e,s){if(!t.returnEdge)return;const i=f(t.bounds),c=P(n,e,this._tmpLineSegment),r=j(c,i,this._tmpP3);w(t.bounds,r)&&s.push({type:"edge",objectId:o,target:u(r),distance:_(i,r),start:u(n),end:u(e)})}};g=v([y("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],g);const R=g;function E(t,o,n,e){if(!t.returnVertex||!w(t.bounds,n))return;const s=f(t.bounds);e.push({type:"vertex",objectId:o,target:u(n),distance:_(s,n)})}class m{constructor(o,n){this.id=o,this.bounds=n,this.info=null,this.uid=++m.uid}}m.uid=0;class T{constructor(o,n,e){this.component=o,this.index=n,this.bounds=e}}export{R as default};
