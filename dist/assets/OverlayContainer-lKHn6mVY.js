import{ae as r,iT as D,iU as Q,iV as R,cP as V,bH as G,iA as X,gY as Y,bP as J,iB as Z,gS as tt,gW as et,gT as st,c7 as it,iC as ot,gU as rt,ca as nt,iW as at,iX as U}from"./index-ZNyjz3YK.js";import{r as pt}from"./vec3f32-nZdmKIgz.js";import{n as dt}from"./WGLContainer-CVrOVarw.js";import{t as ht,a as W,i as lt}from"./FeatureCommandQueue-CGX8OIm-.js";import{h as B,g as a,m as L,I as ct,C as y,P as q,t as ut,j as E,S as ft,a as vt,b as mt,G as xt,H as gt,l as yt,v as wt,w as _t,e as Mt}from"./UpdateTracking2D-DgWJ65zq.js";class T extends ct{}r([B(0,y)],T.prototype,"pos",void 0),r([B(1,y)],T.prototype,"uv",void 0);class St extends wt{}class H extends q{}r([a(ut)],H.prototype,"dvs",void 0);class m extends q{}r([a(y)],m.prototype,"perspective",void 0),r([a(y)],m.prototype,"texSize",void 0),r([a(E)],m.prototype,"wrapAroundShift",void 0),r([a(E)],m.prototype,"opacity",void 0),r([a(ft)],m.prototype,"texture",void 0);class g extends vt{vertex(e){const t=e.uv.divide(this.config.texSize),s=new E(1).add(mt(t,this.config.perspective)),i=new xt(e.pos.add(new y(this.config.wrapAroundShift,0)),1),o=this.transform.dvs.multiply(i);return{uv:t,glPosition:new gt(o.xy.multiply(s),0,s)}}fragment(e){const t=yt(this.config.texture,e.uv).multiply(this.config.opacity),s=new _t;return s.glFragColor=t,s}}r([a(H)],g.prototype,"transform",void 0),r([a(m)],g.prototype,"config",void 0),r([D(0,L(T))],g.prototype,"vertex",null),r([D(0,L(St))],g.prototype,"fragment",null);let $t=class extends ht{constructor(){super(...arguments),this.type=Mt.Overlay,this._mesh=null,this.shaders={overlay:new g}}render(e,t){const{context:s,painter:i}=e,o=this._getMesh(e,t);i.setPipelineState(W);const{isWrapAround:p,wrapAroundShift:c}=t.config,u={...t.config,wrapAroundShift:0},f={shader:this.shaders.overlay,uniforms:{transform:t.transform,config:u},defines:null,optionalAttributes:null,useComputeBuffer:!1};i.setPipelineState({...W,stencil:{write:!1,test:{compare:Q.EQUAL,op:{fail:R.KEEP,zFail:R.KEEP,zPass:R.REPLACE},ref:0,mask:255}}}),i.submitDrawMeshUntyped(s,f,o),p&&(u.wrapAroundShift=c,i.submitDrawMeshUntyped(s,f,o))}shutdown(){V(this._mesh)}_getMesh(e,t){const{context:s}=e;if(this._mesh){const i=this._mesh.vertexBuffers.get("positions");if(!i)throw new Error("Buffer not found");i.setData(t.position)}else{const i=t.index!=null?t.index.length:t.position.length/2;this._mesh=new lt(s,{vertex:{positions:t.position,uvs:t.tex},index:t.index!=null?{index:t.index}:void 0,groups:[{attributes:[{name:"pos",count:2,type:G.FLOAT,location:0,vertex:"positions",stride:8,offset:0},{name:"tex",count:2,type:G.UNSIGNED_SHORT,location:1,vertex:"uvs",stride:4,offset:0}],index:t.index!=null?"index":void 0,primitive:X.TRIANGLE_STRIP}],parts:[{group:0,start:0,count:i}]})}return this._mesh}};class Tt extends dt{constructor(){super(...arguments),this._viewStateId=-1,this._dvsMat3=Y(),this._overlayTechnique=new $t}get dvsMat3(){return this._dvsMat3}beforeRender(e){this._updateMatrices(e),this._updateOverlays(e,this.children);for(const t of this.children)t.beforeRender(e)}doRender(e){if(e.drawPhase!==J.MAP||!this.visible)return;super.doRender(e);const t=this._overlayTechnique;for(const s of this.children)s.draw(e,t)}onDetach(){this._overlayTechnique.shutdown()}_updateMatrices(e){const{state:t}=e,{id:s,size:i,pixelRatio:o,resolution:p,rotation:c,viewpoint:u,displayMat3:f}=t;if(this._viewStateId===s)return;const w=U(c),d=o*i[0],v=o*i[1];this._localOrigin=u.targetGeometry.clone();const{x,y:S}=this._localOrigin,_=Z(x,t.spatialReference);this._localOrigin.x=_,this._localOrigin.y=S;const $=p*d,b=p*v,n=tt(this._dvsMat3);et(n,n,f),st(n,n,it(d/2,v/2)),ot(n,n,pt(d/$,-v/b,1)),rt(n,n,-w),this._viewStateId=s}_updateOverlays(e,t){const{state:s}=e,{rotation:i,spatialReference:o,worldScreenWidth:p,size:c,viewpoint:u}=s,f=this._localOrigin;let w,d=0;const v=nt(o);if(v&&o.isWrappable){const x=c[0],S=c[1],_=U(i),$=Math.abs(Math.cos(_)),b=Math.abs(Math.sin(_)),n=Math.round(x*$+S*b),[I,C]=v.valid,h=at(o),{x:j,y:F}=u.targetGeometry,N=[j,F],A=[0,0];s.toScreen(A,N);const M=[0,0];let O;O=n>p?.5*p:.5*n;const z=Math.floor((j+.5*h)/h),K=I+z*h,k=C+z*h,P=[A[0]+O,0];s.toMap(M,P),M[0]>k&&(d=h),P[0]=A[0]-O,s.toMap(M,P),M[0]<K&&(d=-h),w={worldWidth:h,xBounds:[I,C]}}for(const x of t)x.updateDrawCoords(f,d,o,w)}}export{Tt as u};
