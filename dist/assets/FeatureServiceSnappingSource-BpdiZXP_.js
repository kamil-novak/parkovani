const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./WhereClause-BZIyeXVB.js","./index-CFrkLCgo.js","./index-BJhF1hnf.css"])))=>i.map(i=>d[i]);
import{dZ as Y,ar as B,a7 as n,cN as $,j0 as K,cW as v,gp as G,a8 as r,ab as H,jB as N,cX as I,gc as Q,aJ as j,eR as x,oS as ee,oT as te,oU as ie,oV as se,aI as ne,oW as ae,gF as oe,oX as L,cg as re,d4 as le,gJ as de,cO as X,gY as ue,ii as he,ek as pe,F as A,fU as ce,bj as ye,cz as ge,ag as fe,gN as we,i$ as _e,j2 as ve,ak as U,hc as me,id as f,cR as Se,gZ as J,fx as be,i_ as W,oY as Ie,_ as He}from"./index-CFrkLCgo.js";import{t as Oe}from"./memoize-DsJmrG76.js";import{W as ke,t as $e,g as Fe}from"./boundedPlane-ynS25Sog.js";import{o as Te,i as Pe}from"./queryEngineUtils-BciQmfIy.js";import{h as Me}from"./WorkerHandle-B8LFhk_w.js";import"./lineSegment-BqfR-EAK.js";import"./VertexSnappingCandidate-CpdInK8a.js";import"./PointSnappingHint-BvFQjRWN.js";function E(e,t){return $e(t.extent,D),Fe(D,Y(Ce,e.x,e.y,0))}const D=ke(),Ce=B();let w=class extends ${get tiles(){const t=this.tilesCoveringView,i=this.pointOfInterest!=null?this.pointOfInterest:this.view.center;return t.sort((o,s)=>E(i,o)-E(i,s)),t}_scaleEnabled(){return K(this.view.scale,this.layer.minScale||0,this.layer.maxScale||0)}get tilesCoveringView(){if(!this.view.ready||!this.view.featuresTilingScheme||!this.view.state||this.tileInfo==null)return[];if(!this._scaleEnabled)return[];const{spans:t,lodInfo:i}=this.view.featuresTilingScheme.getTileCoverage(this.view.state,0),{level:o}=i,s=[];for(const{row:a,colFrom:l,colTo:u}of t)for(let p=l;p<=u;p++){const c=i.normalizeCol(p),m=new N(null,o,a,c);this.tileInfo.updateTileInfo(m),s.push(m)}return s}get tileInfo(){var t;return((t=this.view.featuresTilingScheme)==null?void 0:t.tileInfo)??null}get tileSize(){return this.tileInfo!=null?this.tileInfo.size[0]:256}constructor(t){super(t),this.pointOfInterest=null}initialize(){this.addHandles(v(()=>{var t,i;return(i=(t=this.view)==null?void 0:t.state)==null?void 0:i.viewpoint},()=>this.notifyChange("tilesCoveringView"),G))}};n([r({readOnly:!0})],w.prototype,"tiles",null),n([r({readOnly:!0})],w.prototype,"_scaleEnabled",null),n([r({readOnly:!0})],w.prototype,"tilesCoveringView",null),n([r({readOnly:!0})],w.prototype,"tileInfo",null),n([r({readOnly:!0})],w.prototype,"tileSize",null),n([r({constructOnly:!0})],w.prototype,"view",void 0),n([r({constructOnly:!0})],w.prototype,"layer",void 0),n([r()],w.prototype,"pointOfInterest",void 0),w=n([H("esri.views.2d.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles2D")],w);let _=class extends ${get tiles(){const t=this.tilesCoveringView,i=this._effectivePointOfInterest;if(i!=null){const o=t.map(s=>E(i,s));for(let s=1;s<o.length;s++)if(o[s-1]>o[s])return t.sort((a,l)=>E(i,a)-E(i,l)),t.slice()}return t}get tilesCoveringView(){var t,i;return(((i=(t=this.view.featureTiles)==null?void 0:t.tiles)==null?void 0:i.toArray())??[]).map(Ee)}get tileInfo(){var t,i;return((i=(t=this.view.featureTiles)==null?void 0:t.tilingScheme)==null?void 0:i.toTileInfo())??null}get tileSize(){var t;return((t=this.view.featureTiles)==null?void 0:t.tileSize)??256}get _effectivePointOfInterest(){var i;const t=this.pointOfInterest;return t??((i=this.view.pointsOfInterest)==null?void 0:i.focus.location)}constructor(t){super(t),this.pointOfInterest=null}initialize(){this.addHandles(v(()=>this.view.featureTiles,t=>{this.removeHandles(Z),t&&this.addHandles(t.addClient(),Z)},I))}};function Ee({lij:[e,t,i],extent:o}){return new N(`${e}/${t}/${i}`,e,t,i,o)}n([r({readOnly:!0})],_.prototype,"tiles",null),n([r({readOnly:!0})],_.prototype,"tilesCoveringView",null),n([r({readOnly:!0})],_.prototype,"tileInfo",null),n([r({readOnly:!0})],_.prototype,"tileSize",null),n([r({constructOnly:!0})],_.prototype,"view",void 0),n([r()],_.prototype,"pointOfInterest",void 0),n([r()],_.prototype,"_effectivePointOfInterest",null),_=n([H("esri.views.3d.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles3D")],_);const Z="feature-tiles",ze=[[0,179,255],[117,62,128],[0,104,255],[215,189,166],[32,0,193],[98,162,206],[102,112,129],[52,125,0],[142,118,246],[138,83,0],[92,122,255],[122,55,83],[0,142,255],[81,40,179],[0,200,244],[13,24,127],[0,170,147],[19,58,241],[22,44,35]];let k=class extends ${constructor(e){super(e),this.updating=!1,this.enablePolygons=!0,this.enableLabels=!0,this._polygons=new Map,this._labels=new Map,this._enabled=!0}initialize(){this._symbols=ze.map(e=>new Q({color:[e[0],e[1],e[2],.6],outline:{color:"black",width:1}})),this.update()}destroy(){this._enabled=!1,this.clear()}get enabled(){return this._enabled}set enabled(e){this._enabled!==e&&(this._enabled=e,this.update())}update(){if(!this._enabled)return void this.clear();const e=a=>{if(a.label!=null)return a.label;let l=a.lij.toString();return a.loadPriority!=null&&(l+=` (${a.loadPriority})`),a.measures&&(l+=`[${a.measures.effectiveLevelForLod}]`),l},t=this.getTiles(),i=new Array,o=new Set((this._labels.size,this._labels.keys()));t.forEach((a,l)=>{var m;const u=a.lij.toString();o.delete(u);const p=((m=a.measures)==null?void 0:m.effectiveLevelForLod)??a.lij[0],c=a.geometry;if(this.enablePolygons&&!this._polygons.has(u)){const S=new j({geometry:c,symbol:this._symbols[p%this._symbols.length]});this._polygons.set(u,S),i.push(S)}if(this.enableLabels){const S=e(a),F=l/(t.length-1),O=L(0,200,F),T=L(20,6,F)/.75,P=a.loadPriority!=null&&a.loadPriority>=t.length,M=new x([O,P?0:O,P?0:O]),C=this.view.type==="3d"?()=>new ee({verticalOffset:new te({screenLength:40/.75}),callout:new ie({color:new x("white"),border:new se({color:new x("black")})}),symbolLayers:new ne([new ae({text:S,halo:{color:"white",size:1/.75},material:{color:M},size:T})])}):()=>new oe({text:S,haloColor:"white",haloSize:1/.75,color:M,size:T}),d=this._labels.get(u);if(d){const g=C();d.symbol!=null&&JSON.stringify(g)===JSON.stringify(d.symbol)||(d.symbol=g)}else{const g=new j({geometry:c.extent.center,symbol:C()});this._labels.set(u,g),i.push(g)}}});const s=new Array;o.forEach(a=>{const l=this._polygons.get(a);l!=null&&(s.push(l),this._polygons.delete(a));const u=this._labels.get(a);u!=null&&(s.push(u),this._labels.delete(a))}),this.view.graphics.removeMany(s),this.view.graphics.addMany(i)}clear(){this.view.graphics.removeMany(Array.from(this._polygons.values())),this.view.graphics.removeMany(Array.from(this._labels.values())),this._polygons.clear(),this._labels.clear()}};n([r({constructOnly:!0})],k.prototype,"view",void 0),n([r({readOnly:!0})],k.prototype,"updating",void 0),n([r()],k.prototype,"enabled",null),k=n([H("esri.views.support.TileTreeDebugger")],k);let z=class extends k{constructor(e){super(e)}initialize(){const e=setInterval(()=>this._fetchDebugInfo(),2e3);this.addHandles(re(()=>clearInterval(e)))}getTiles(){if(!this._debugInfo)return[];const e=new Map,t=new Map;this._debugInfo.storedTiles.forEach(s=>{e.set(s.data.id,s.featureCount)}),this._debugInfo.pendingTiles.forEach(s=>{e.set(s.data.id,s.featureCount),t.set(s.data.id,s.state)});const i=s=>{const a=t.get(s),l=e.get(s)??"?";return a?`${a}:${l}
${s}`:`store:${l}
${s}`},o=new Map;return this._debugInfo.storedTiles.forEach(s=>{o.set(s.data.id,s.data)}),this._debugInfo.pendingTiles.forEach(s=>{o.set(s.data.id,s.data)}),Array.from(o.values()).map(s=>({lij:[s.level,s.row,s.col],geometry:le.fromExtent(de(s.extent,this.view.spatialReference)),label:i(s.id)}))}_fetchDebugInfo(){this.handle.getDebugInfo(null).then(e=>{this._debugInfo=e,this.update()})}};n([r({constructOnly:!0})],z.prototype,"handle",void 0),z=n([H("esri.views.interactive.snapping.featureSources.WorkerTileTreeDebugger")],z);let y=class extends ${get updating(){return this._updatingHandles.updating||this._workerHandleUpdating}constructor(e){super(e),this._updatingHandles=new X,this._suspendController=null,this.schedule=null,this.hasZ=!1,this.elevationAlignPointsInFeatures=async t=>{const i=[];for(const{points:o}of t.pointsInFeatures)for(const{z:s}of o)i.push(s);return{elevations:i,drapedObjectIds:new Set,failedObjectIds:new Set}},this.queryForSymbologySnapping=async()=>({candidates:[],sourceCandidateIndices:[]}),this.availability=0,this._workerHandleUpdating=!0,this.updateOutFields=ue(async(t,i)=>{await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("updateOutFields",[...t],i)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},i))})}destroy(){this._suspendController=he(this._suspendController),this._workerHandle.destroy(),this._updatingHandles.destroy()}initialize(){this._workerHandle=new Ne(this.schedule,{alignElevation:async(e,{signal:t})=>({result:await this.elevationAlignPointsInFeatures(e.query,t)}),getSymbologyCandidates:async(e,{signal:t})=>({result:await this.queryForSymbologySnapping(e,t)})}),this.addHandles([this._workerHandle.on("notify-updating",({updating:e})=>this._workerHandleUpdating=e),this._workerHandle.on("notify-availability",({availability:e})=>this._set("availability",e))])}async setup(e,t){var s;const i=xe(e.layer);if(i==null)return;const o={configuration:q(e.configuration),serviceInfo:i,spatialReference:e.spatialReference.toJSON(),hasZ:this.hasZ,elevationInfo:(s=e.layer.elevationInfo)==null?void 0:s.toJSON()};await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("setup",o,t)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async configure(e,t){const i=q(e);await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("configure",i,t)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async refresh(e){await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("refresh",{},e)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},e))}async fetchCandidates(e,t){const{point:i,filter:o,coordinateHelper:s}=e,a={...e,point:pe(i[0],i[1],i[2],s.spatialReference.toJSON()),filter:o==null?void 0:o.toJSON()};return this._workerHandle.invoke(a,t)}async updateTiles(e,t){const i={tiles:e.tiles,tileInfo:e.tileInfo!=null?e.tileInfo.toJSON():null,tileSize:e.tileSize};await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("updateTiles",i,t)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async handleEdits({historicMoment:e,addedFeatures:t,deletedFeatures:i,updatedFeatures:o},s){const a={historicMoment:e,addedFeatures:(t==null?void 0:t.map(({objectId:l})=>l).filter(A))??[],deletedFeatures:(i==null?void 0:i.map(({objectId:l,globalId:u})=>({objectId:l,globalId:u})))??[],updatedFeatures:(o==null?void 0:o.map(({objectId:l})=>l).filter(A))??[]};await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("handleEdits",a,s)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},s))}async setHistoricMoment(e,t){await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("setHistoricMoment",{moment:e},t))}getDebugInfo(e){return this._workerHandle.invokeMethod("getDebugInfo",{},e)}async notifyElevationSourceChange(){await this._workerHandle.invokeMethod("notifyElevationSourceChange",{})}async notifySymbologyChange(){await this._workerHandle.invokeMethod("notifySymbologyChange",{})}async setSymbologySnappingSupported(e){await this._workerHandle.invokeMethod("setSymbologySnappingSupported",e)}async setSuspended(e){var t;(t=this._suspendController)==null||t.abort(),this._suspendController=new AbortController,await this._workerHandle.invokeMethod("setSuspended",e,this._suspendController.signal)}};function q(e){return{filter:e.filter!=null?e.filter.toJSON():null,customParameters:e.customParameters,viewType:e.viewType}}function xe(e){var t,i;return e.geometryType==="multipatch"||e.geometryType==="mesh"?null:{url:((t=e.parsedUrl)==null?void 0:t.path)??"",fieldsIndex:e.fieldsIndex.toJSON(),geometryType:ce.toJSON(e.geometryType),capabilities:e.capabilities,objectIdField:e.objectIdField,globalIdField:e.globalIdField,spatialReference:e.spatialReference.toJSON(),timeInfo:(i=e.timeInfo)==null?void 0:i.toJSON()}}n([r({constructOnly:!0})],y.prototype,"schedule",void 0),n([r({constructOnly:!0})],y.prototype,"hasZ",void 0),n([r({constructOnly:!0})],y.prototype,"elevationAlignPointsInFeatures",void 0),n([r({constructOnly:!0})],y.prototype,"queryForSymbologySnapping",void 0),n([r({readOnly:!0})],y.prototype,"updating",null),n([r({readOnly:!0})],y.prototype,"availability",void 0),n([r()],y.prototype,"_workerHandleUpdating",void 0),y=n([H("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceSnappingSourceWorkerHandle")],y);class Ne extends Me{constructor(t,i){super("FeatureServiceSnappingSourceWorker","fetchCandidates",{},t,{strategy:"dedicated",client:i})}}let b=class extends ${get tiles(){return[new N("0/0/0",0,0,0,ye(-1e8,-1e8,1e8,1e8))]}get tileInfo(){return new ge({origin:new fe({x:-1e8,y:1e8,spatialReference:this.layer.spatialReference}),size:[512,512],lods:[new we({level:0,scale:1,resolution:390625})],spatialReference:this.layer.spatialReference})}get tileSize(){return this.tileInfo.size[0]}constructor(e){super(e),this.pointOfInterest=null}};n([r({readOnly:!0})],b.prototype,"tiles",null),n([r({readOnly:!0})],b.prototype,"tileInfo",null),n([r({readOnly:!0})],b.prototype,"tileSize",null),n([r({constructOnly:!0})],b.prototype,"layer",void 0),n([r()],b.prototype,"pointOfInterest",void 0),b=n([H("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTilesSimple")],b);let h=class extends ${get _updateTilesParameters(){return{tiles:this._tilesOfInterest.tiles,tileInfo:this._tilesOfInterest.tileInfo,tileSize:this._tilesOfInterest.tileSize}}get _layerView(){var e;return(e=this.view)==null?void 0:e.allLayerViews.find(t=>t.layer===this._layer)}get _isSuspended(){var e;return _e(this._layer)&&!this.layerSource.sublayerSources.some(t=>t.enabled&&t.layer.visible)?!0:!!this.view&&(((e=this._layerView)==null?void 0:e.suspended)!==!1||!this.layerSource.enabled)}get updating(){var e;return((e=this._workerHandle)==null?void 0:e.updating)||this._updatingHandles.updating}get _outFields(){var m,S,F,O,T,P,M,C;const{view:e,_layerView:t,layerSource:i}=this,{layer:o}=i,{fieldsIndex:s,timeInfo:a,floorInfo:l,subtypeField:u}=o,p=t&&"filter"in t?t.filter:null,c=p!=null&&p.where&&p.where!=="1=1"?this._getOrLoadWhereFields(p.where,s):[];if(p!=null&&p.timeExtent&&a){const{startField:d,endField:g}=a,R=((m=s.get(d))==null?void 0:m.name)??d,V=((S=s.get(g))==null?void 0:S.name)??g;R&&c.push(R),V&&c.push(V)}if(e!=null&&e.map&&ve(e.map)&&((F=e.map.utilityNetworks)!=null&&F.find(d=>d.isUtilityLayer(o)))){const d=(O=o.fieldsIndex.get("assetGroup"))==null?void 0:O.name,g=(T=o.fieldsIndex.get("assetType"))==null?void 0:T.name;d&&g&&(c.push(d),c.push(g))}if(o&&(l!=null&&l.floorField)&&((P=e==null?void 0:e.floors)!=null&&P.length)){const d=((M=s.get(l.floorField))==null?void 0:M.name)??l.floorField;d&&c.push(d)}if(u){const d=((C=s.get(u))==null?void 0:C.name)??u;d&&c.push(d)}return new Set(c)}get configuration(){const{view:e}=this,{apiKey:t,customParameters:i}=this._layer,o=e!=null?e.type:"2d";return{filter:this._layer.createQuery(),customParameters:t?{...i,token:t}:i,viewType:o}}get availability(){var e;return((e=this._workerHandle)==null?void 0:e.availability)??0}get _layer(){return this.layerSource.layer}constructor(e){super(e),this._updatingHandles=new X,this._workerHandle=null,this._debug=null,this._memoizedMakeGetGroundElevation=Oe(Pe)}initialize(){let e;const t=this.view;if(t==null||t.destroyed)this._tilesOfInterest=new b({layer:this._layer}),e=this._workerHandle=new y;else switch(t.type){case"2d":this._tilesOfInterest=new w({view:t,layer:this._layer}),e=this._workerHandle=new y;break;case"3d":{const{resourceController:i}=t,o=this._layer;this._tilesOfInterest=new _({view:t}),e=this._workerHandle=new y({schedule:s=>i.immediate.schedule(s),hasZ:this._layer.hasZ&&(this._layer.returnZ??!0),elevationAlignPointsInFeatures:async(s,a)=>{const l=await t.whenLayerView(o);return U(a),l.elevationAlignPointsInFeatures(s,a)},queryForSymbologySnapping:async(s,a)=>{const l=await t.whenLayerView(o);return U(a),l.queryForSymbologySnapping(s,a)}}),this.addHandles([t.elevationProvider.on("elevation-change",({context:s})=>{const{elevationInfo:a}=o;me(s,a)&&f(e.notifyElevationSourceChange())}),v(()=>o.elevationInfo,()=>f(e.notifyElevationSourceChange()),I),v(()=>{var s,a;return(a=(s=this._layerView)==null?void 0:s.layer)==null?void 0:a.renderer},()=>f(e.notifySymbologyChange()),I),v(()=>{var s;return((s=this._layerView)==null?void 0:s.symbologySnappingSupported)??!1},s=>f(e.setSymbologySnappingSupported(s)),I),Se(()=>{var s;return(s=this._layerView)==null?void 0:s.layer},["edits","apply-edits","graphic-update"],()=>e.notifySymbologyChange())]);break}}this.addHandles([J(e)]),f(e.setup({layer:this._layer,spatialReference:this.spatialReference,configuration:this.configuration},null)),this._updatingHandles.add(()=>this._updateTilesParameters,()=>f(e.updateTiles(this._updateTilesParameters,null)),I),this.addHandles([v(()=>this.configuration,i=>f(e.configure(i,null)),G),v(()=>this._layer.historicMoment,i=>f(e.setHistoricMoment(i)),W),v(()=>this._outFields,i=>f(e.updateOutFields(i)),I),v(()=>this._isSuspended,i=>f(e.setSuspended(i)),W)]),t!=null&&this.addHandles(v(()=>Ie.FEATURE_SERVICE_SNAPPING_SOURCE_TILE_TREE_SHOW_TILES,i=>{i&&!this._debug?(this._debug=new z({view:t,handle:e}),this.addHandles(J(this._debug),"debug")):!i&&this._debug&&this.removeHandles("debug")},I)),this.addHandles([this.layerSource.layer.on("edits",i=>f(e.handleEdits(i,null))),this.layerSource.layer.on("apply-edits",i=>this._updatingHandles.addPromise(i.result))])}destroy(){this._updatingHandles.destroy()}refresh(){var e;(e=this._workerHandle)==null||e.refresh(null)}async fetchCandidates(e,t){const{coordinateHelper:i,point:o}=e;this._tilesOfInterest.pointOfInterest=i.arrayToPoint(o);const s=this._memoizedMakeGetGroundElevation(this.view,i.spatialReference);return(await this._workerHandle.fetchCandidates({...e},t)).candidates.map(a=>Te(a,s))}getDebugInfo(e){return this._workerHandle.getDebugInfo(e)}_getOrLoadWhereFields(e,t){const{_whereModule:i}=this;if(!this._loadWhereModuleTask&&!i){const o=be(async()=>{const s=await He(()=>import("./WhereClause-BZIyeXVB.js").then(a=>a.W),__vite__mapDeps([0,1,2]),import.meta.url);return this._whereModule=s.WhereClause,this._whereModule});return this._loadWhereModuleTask=o,this._updatingHandles.addPromise(o.promise),[]}if(!i)return[];try{return i.create(e,{fieldsIndex:t}).fieldNames}catch{return[]}}};n([r({constructOnly:!0})],h.prototype,"spatialReference",void 0),n([r({constructOnly:!0})],h.prototype,"layerSource",void 0),n([r({constructOnly:!0})],h.prototype,"view",void 0),n([r()],h.prototype,"_tilesOfInterest",void 0),n([r({readOnly:!0})],h.prototype,"_updateTilesParameters",null),n([r()],h.prototype,"_layerView",null),n([r()],h.prototype,"_isSuspended",null),n([r({readOnly:!0})],h.prototype,"updating",null),n([r()],h.prototype,"_outFields",null),n([r({readOnly:!0})],h.prototype,"configuration",null),n([r({readOnly:!0})],h.prototype,"availability",null),n([r()],h.prototype,"_loadWhereModuleTask",void 0),n([r()],h.prototype,"_whereModule",void 0),h=n([H("esri.views.interactive.snapping.featureSources.FeatureServiceSnappingSource")],h);export{h as FeatureServiceSnappingSource};
