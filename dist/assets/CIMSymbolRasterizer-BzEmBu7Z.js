import{i as k}from"./CIMResourceManager-BCwRuYrD.js";import{e as _,s as E,$ as F}from"./CIMSymbolHelper-Ce-LjMCU.js";import{f4 as P,f5 as G}from"./index-OIP8JdN-.js";import"./fontUtils-DbOnsBIi.js";import"./BidiEngine-DNnuvc1i.js";import"./GeometryUtils-CTesMtMQ.js";import"./Rect-CUzevAry.js";import"./BoundingBox-D1UJQmuJ.js";const $=96/72;class H{constructor(g){this._spatialReference=g,this._imageDataCanvas=null,this._cimResourceManager=new k}get _canvas(){return this._imageDataCanvas||(this._imageDataCanvas=document.createElement("canvas")),this._imageDataCanvas}get resourceManager(){return this._cimResourceManager}async rasterizeCIMSymbolAsync(g,u,p,f,r,a,n,h,M){if(!g)return null;const{data:c}=g;if(!c||c.type!=="CIMSymbolReference"||!c.symbol)return null;const{symbol:C}=c;a||(a=P(C));const s=await G.resolveSymbolOverrides(c,u,this._spatialReference,r,a,n,h),l=this._cimResourceManager,w=[];_.fetchResources(s,l,w),_.fetchFonts(s,l,w),w.length>0&&await Promise.all(w);const{width:t,height:i}=p,R=D(a,t,i,f),e=_.getEnvelope(s,R,l);if(!e)return null;e.x===1/0&&(e.x=t+2),e.y===1/0&&(e.y=-i/2),e.width===-1/0&&(e.width=t),e.height===-1/0&&(e.height=i);let o=1,v=0,x=0;switch(C.type){case"CIMPointSymbol":case"CIMTextSymbol":{let m=1;e.width>t&&(m=t/e.width);let d=1;e.height>i&&(d=i/e.height),f==="preview"&&(e.width<t&&(m=t/e.width),e.height<i&&(d=i/e.height)),o=Math.min(m,d),v=e.x+e.width/2,x=e.y+e.height/2}break;case"CIMLineSymbol":{(M||e.height>i)&&(o=i/e.height),x=e.y+e.height/2;const m=e.x*o+t/2,d=(e.x+e.width)*o+t/2,{paths:b}=R;b[0][0][0]-=m/o,b[0][2][0]-=(d-t)/o}break;case"CIMPolygonSymbol":{v=e.x+e.width/2,x=e.y+e.height/2;const m=e.x*o+t/2,d=(e.x+e.width)*o+t/2,b=e.y*o+i/2,I=(e.y+e.height)*o+i/2,{rings:y}=R;m<0&&(y[0][0][0]-=m,y[0][3][0]-=m,y[0][4][0]-=m),b<0&&(y[0][0][1]+=b,y[0][1][1]+=b,y[0][4][1]+=b),d>t&&(y[0][1][0]-=d-t,y[0][2][0]-=d-t),I>i&&(y[0][2][1]+=I-i,y[0][3][1]+=I-i)}}const z={type:"cim",data:{type:"CIMSymbolReference",symbol:s}};return this.rasterize(z,t,i,v,x,o,a,1,R)}rasterize(g,u,p,f,r,a,n,h=0,M=null){const{data:c}=g;if(!c||c.type!=="CIMSymbolReference"||!c.symbol)return null;const{symbol:C}=c,s=this._canvas,l=(window.devicePixelRatio||1)*$;s.width=u*l,s.height=p*l,n||(n=P(C)),M||(M=D(n,u,p,"legend")),s.width+=2*h,s.height+=2*h;const w=s.getContext("2d",{willReadFrequently:!0}),t=F.createIdentity();return t.translate(-f,-r),t.scale(a*l,-a*l),t.translate(u*l/2+h,p*l/2+h),w.clearRect(0,0,s.width,s.height),new E(w,this._cimResourceManager,t,!0).drawSymbol(C,M),w.getImageData(0,0,s.width,s.height)}}function D(S,g,u,p){const r=-g/2+1,a=g/2-1,n=u/2-1,h=-u/2+1;switch(S){case"esriGeometryPoint":return{x:0,y:0};case"esriGeometryPolyline":return{paths:[[[r,0],[0,0],[a,0]]]};default:return p==="legend"?{rings:[[[r,n],[a,0],[a,h],[r,h],[r,n]]]}:{rings:[[[r,n],[a,n],[a,h],[r,h],[r,n]]]}}}export{H as CIMSymbolRasterizer};
