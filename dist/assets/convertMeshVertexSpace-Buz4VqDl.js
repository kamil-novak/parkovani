import{ak as p,s as m,aq as s}from"./index-lgQOPtME.js";import{p as n}from"./MeshVertexAttributes-DADWM2dH.js";import{B as a}from"./vertexSpaceConversion-CrvBx3qn.js";import"./meshProperties-C4iW0Ukm.js";import"./spatialReferenceEllipsoidUtils-DxOUB5AL.js";import"./computeTranslationToOriginAndRotation-BFFQg_qE.js";import"./meshVertexSpaceUtils-B2Vq9jie.js";import"./MeshLocalVertexSpace-BLl6_ePE.js";import"./vec3-BO3iRWnv.js";import"./BufferView-C5J_dkNC.js";import"./vec4-NEFdDkNT.js";async function V(t,o,r){await Promise.resolve(),p(r);const e=a(t,o,{useEllipsoid:r==null?void 0:r.useEllipsoid});if(!e)throw new m("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");const i=t.cloneAndModifyVertexAttributes(new n({...e,uv:s(t.vertexAttributes.uv),color:s(t.vertexAttributes.color)}),o);return i.transform=null,i}export{V as convertMeshVertexSpace};
