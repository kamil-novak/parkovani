import{ak as p,s as m,aq as s}from"./index-DlYLAng9.js";import{p as n}from"./MeshVertexAttributes-DyoTX7bu.js";import{B as a}from"./vertexSpaceConversion-BySMILg1.js";import"./meshProperties-C4iW0Ukm.js";import"./spatialReferenceEllipsoidUtils-DnxvYBuR.js";import"./computeTranslationToOriginAndRotation-DTSr9xyo.js";import"./meshVertexSpaceUtils-CIoe51m7.js";import"./MeshLocalVertexSpace-C75Ge6Eg.js";import"./vec3-Cqby1b-t.js";import"./BufferView-BZkdS9-S.js";import"./vec4-DZ90zUZw.js";async function V(t,o,r){await Promise.resolve(),p(r);const e=a(t,o,{useEllipsoid:r==null?void 0:r.useEllipsoid});if(!e)throw new m("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");const i=t.cloneAndModifyVertexAttributes(new n({...e,uv:s(t.vertexAttributes.uv),color:s(t.vertexAttributes.color)}),o);return i.transform=null,i}export{V as convertMeshVertexSpace};
