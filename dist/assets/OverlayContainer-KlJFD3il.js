import{ct as W,cu as j,cv as A,cw as G,cx as B,aP as C,cy as D,cz as E,aT as L,cA as T}from"./index-DHGxLLtA.js";import{r as k}from"./vec3f32-nZdmKIgz.js";import{n as q,h as F}from"./WGLContainer-DJiMukqF.js";import{E as H}from"./Container-qwMOy-ds.js";class V extends q{constructor(){super(...arguments),this._viewStateId=-1,this._dvsMat3=W()}get dvsMat3(){return this._dvsMat3}beforeRender(e){this._updateMatrices(e),this._updateOverlays(e,this.children);for(const s of this.children)s.beforeRender(e)}prepareRenderPasses(e){const s=e.registerRenderPass({name:"overlay",brushes:[F.overlay],target:()=>this.children,drawPhase:H.MAP});return[...super.prepareRenderPasses(e),s]}_updateMatrices(e){const{state:s}=e,{id:a,size:d,pixelRatio:r,resolution:c,rotation:l,viewpoint:u,displayMat3:v}=s;if(this._viewStateId===a)return;const p=Math.PI/180*l,i=r*d[0],n=r*d[1];this._localOrigin=u.targetGeometry.clone();const{x:h,y:_}=this._localOrigin,M=j(h,s.spatialReference);this._localOrigin.x=M,this._localOrigin.y=_;const m=c*i,g=c*n,t=A(this._dvsMat3);G(t,t,v),B(t,t,C(i/2,n/2)),D(t,t,k(i/m,-n/g,1)),E(t,t,-p),this._viewStateId=a}_updateOverlays(e,s){const{state:a}=e,{rotation:d,spatialReference:r,worldScreenWidth:c,size:l,viewpoint:u}=a,v=this._localOrigin;let p,i=0;const n=L(r);if(n&&r.isWrappable){const h=l[0],_=l[1],M=180/Math.PI*d,m=Math.abs(Math.cos(M)),g=Math.abs(Math.sin(M)),t=Math.round(h*m+_*g),[R,P]=n.valid,o=T(r),{x:b,y:I}=u.targetGeometry,S=[b,I],w=[0,0];a.toScreen(w,S);const f=[0,0];let y;y=t>c?.5*c:.5*t;const O=Math.floor((b+.5*o)/o),$=R+O*o,z=P+O*o,x=[w[0]+y,0];a.toMap(f,x),f[0]>z&&(i=o),x[0]=w[0]-y,a.toMap(f,x),f[0]<$&&(i=-o),p={worldWidth:o,xBounds:[R,P]}}for(const h of s)h.updateDrawCoords(v,i,r,p)}}export{V as f};
