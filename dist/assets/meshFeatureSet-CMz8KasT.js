import{cF as h,$ as y,aA as S,ae as g,fu as l,ai as N}from"./index-CrRj_mLP.js";import{$ as E}from"./Mesh-CLthHss-.js";import{i as D,a as F}from"./External-BS0NNivq.js";import{s as M}from"./infoFor3D-CxdEiWhp.js";import{n as T,i as w}from"./meshFeatureAttributes-icHnwTqx.js";import"./MeshTransform-DBfroJ2r.js";import"./mat4f64-CSKppSlJ.js";import"./quat-CqZw2nKf.js";import"./mat3f64-q3fE-ZOt.js";import"./quatf64-aQ5IuZRd.js";import"./MeshVertexAttributes-C8AbHe4y.js";import"./MeshLocalVertexSpace-CoybIlns.js";import"./meshVertexSpaceUtils-BvtzJZQJ.js";import"./earcut-Lltz9D9k.js";import"./Indices-DfO2GgXx.js";import"./plane-d1Tq-tkK.js";import"./deduplicate-KHO647XS.js";import"./projectPointToVector-B079xzOn.js";import"./vertexSpaceConversion-CPOhvlYE.js";import"./spatialReferenceEllipsoidUtils-CY7bryHw.js";import"./computeTranslationToOriginAndRotation-C1C-LK-5.js";import"./vec3-DX5me3WE.js";import"./BufferView-B8oqaSxD.js";import"./vec4-BztjW8LQ.js";const I=()=>N.getLogger("esri.rest.support.meshFeatureSet");function rt(t,o,e){const r=e.features;e.features=[],delete e.geometryType;const s=h.fromJSON(e);if(s.geometryType="mesh",!e.assetMaps)return s;const n=$(o,e.assetMaps),i=t.sourceSpatialReference??y.WGS84,m=e.globalIdFieldName,{outFields:a}=t,f=a!=null&&a.length>0?L(a.includes("*")?null:new Set(a)):()=>({});for(const u of r){const p=O(u,m,i,o,n);s.features.push(new S({geometry:p,attributes:f(u)}))}return s}function L(t){return({attributes:o})=>{if(!o)return{};if(!t)return o;for(const e in o)t.has(e)||delete o[e];return o}}function O(t,o,e,r,s){const n=t.attributes[o],i=s.get(n);if(i==null||!t.geometry)return null;const m=T(t.attributes,e,r.transformFieldRoles),a=g.fromJSON(t.geometry);a.spatialReference=e;const f=w(t.attributes,r.transformFieldRoles),u=e.isGeographic?"local":"georeferenced",p=b(i);return p?E.createWithExternalSource(m,p,{extent:a,transform:f,vertexSpace:u,unitConversionDisabled:!0}):E.createIncomplete(m,{extent:a,transform:f,vertexSpace:u})}var c;function $(t,o){const e=new Map;for(const r of o){const s=r.parentGlobalId;if(s==null)continue;const n=r.assetName,i=r.assetType,m=r.assetHash,a=r.assetURL,f=r.conversionStatus,u=r.seqNo,p=M(i,t.supportedFormats);if(!p){I().error("mesh-feature-set:unknown-format",`Service returned an asset of type ${i}, but it does not list it as a supported type`);continue}const d=l(e,s,()=>({files:new Map}));l(d.files,n,()=>({name:n,type:i,mimeType:p,status:P(f),parts:[]})).parts[u]={hash:m,url:a}}return e}function b(t){const o=Array.from(t.files.values()),e=new Array;for(const r of o){if(r.status!==c.COMPLETED)return null;const s=new Array;for(const n of r.parts){if(!n)return null;s.push(new D(n.url,n.hash))}e.push(new F(r.name,r.mimeType,s))}return e}function P(t){switch(t){case"COMPLETED":case"SUBMITTED":return c.COMPLETED;case"INPROGRESS":return c.PENDING;default:return c.FAILED}}(function(t){t[t.FAILED=0]="FAILED",t[t.PENDING=1]="PENDING",t[t.COMPLETED=2]="COMPLETED"})(c||(c={}));export{$ as assetMapFromAssetMapsJSON,O as extractMesh,rt as meshFeatureSetFromJSON};
