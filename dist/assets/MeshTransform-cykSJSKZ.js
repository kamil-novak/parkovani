import{ej as w,gy as B,gz as q,gA as z,gB as C,gC as D,f6 as M,ae as s,af as e,aj as F,bb as I,gD as k,bc as E,ee as l,gE as G,ey as H,gF as P,ai as T}from"./index-ZNyjz3YK.js";import{e as m}from"./mat4f64-CSKppSlJ.js";import{v as d,b as p,x as U}from"./quat-BtuWl2mw.js";import{e as f}from"./quatf64-aQ5IuZRd.js";function a(t=v){return[t[0],t[1],t[2],t[3]]}function c(t,o,n=a()){return w(n,t),n[3]=o,n}function R(t,o=a()){const n=D(i,t);return j(o,M(d(o,n))),o}function x(t,o,n=a()){return p(i,t,h(t)),p(A,o,h(o)),U(i,A,i),j(n,M(d(n,i)))}function S(t,o,n,y=a()){return c(B,t,u),c(q,o,$),c(z,n,b),x(u,$,u),x(u,b,y),y}function V(t){return t}function J(t){return t[3]}function h(t){return C(t[3])}function j(t,o){return t[3]=o,t}const v=[0,0,1,0],i=f(),A=f();a();const u=a(),$=a(),b=a();var g;let r=g=class extends F{constructor(t){super(t),this.translation=I(),this.rotationAxis=k(v),this.rotationAngle=0,this.scale=E(1,1,1)}get rotation(){return c(this.rotationAxis,this.rotationAngle)}set rotation(t){this.rotationAxis=l(t),this.rotationAngle=J(t)}get localMatrix(){const t=m();return p(N,this.rotation,h(this.rotation)),G(t,N,this.translation,this.scale),t}get localMatrixInverse(){return H(m(),this.localMatrix)}equals(t){return this===t||t!=null&&P(this.localMatrix,t.localMatrix)}clone(){const t={translation:l(this.translation),rotationAxis:l(this.rotationAxis),rotationAngle:this.rotationAngle,scale:l(this.scale)};return new g(t)}};s([e({type:[Number],nonNullable:!0,json:{write:!0}})],r.prototype,"translation",void 0),s([e({type:[Number],nonNullable:!0,json:{write:!0}})],r.prototype,"rotationAxis",void 0),s([e({type:Number,nonNullable:!0,json:{write:!0}})],r.prototype,"rotationAngle",void 0),s([e({type:[Number],nonNullable:!0,json:{write:!0}})],r.prototype,"scale",void 0),s([e()],r.prototype,"rotation",null),s([e()],r.prototype,"localMatrix",null),s([e()],r.prototype,"localMatrixInverse",null),r=g=s([T("esri.geometry.support.MeshTransform")],r);const N=f(),W=r;export{W as N,S as d,a as j,R as k,V as w,h as z};
