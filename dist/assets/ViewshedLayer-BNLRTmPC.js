import{g0 as H,mc as J,a7 as t,a8 as s,ag as G,gO as I,md as b,me as U,ab as _,mf as W,aI as A,dt as X,cW as L,i_ as P,ds as k,mg as B,ae as K,b8 as j,c0 as q,g3 as Q,g6 as Y,af as Z,gd as ee}from"./index-jPcNmXdQ.js";import{c as te,b as ie}from"./featureReferenceUtils-Cnz-HsE1.js";import{c as se}from"./Analysis-DDEWIQDr.js";import"./IntersectorInterfaces-BgX4KEwK.js";import"./boundedPlane-NsaZ97Yr.js";import"./lineSegment-BPUGeNuT.js";let a=class extends H(W){constructor(e){super(e),this.observer=null,this.farDistance=1e3,this.heading=0,this.tilt=90,this.horizontalFieldOfView=45,this.verticalFieldOfView=45,this.feature=null}isValid(){return this.observer!=null&&this.farDistance>0}equals(e){return J(this.observer,e.observer)&&this.farDistance===e.farDistance&&this.heading===e.heading&&this.tilt===e.tilt&&this.horizontalFieldOfView===e.horizontalFieldOfView&&this.verticalFieldOfView===e.verticalFieldOfView&&te(this.feature,e.feature)}};t([s({type:G,json:{write:!0}})],a.prototype,"observer",void 0),t([s({type:Number,nonNullable:!0,range:{min:0},json:{write:{isRequired:!0}}})],a.prototype,"farDistance",void 0),t([s({type:Number,nonNullable:!0,json:{write:{isRequired:!0}}}),I(i=>b.normalize(U(i),void 0,!0))],a.prototype,"heading",void 0),t([s({type:Number,nonNullable:!0,range:{min:0,max:180},json:{write:{isRequired:!0}}})],a.prototype,"tilt",void 0),t([s({type:Number,nonNullable:!0,range:{min:0,max:360},json:{write:{isRequired:!0}}})],a.prototype,"horizontalFieldOfView",void 0),t([s({type:Number,nonNullable:!0,range:{min:0,max:180},json:{write:{isRequired:!0}}})],a.prototype,"verticalFieldOfView",void 0),t([s(ie)],a.prototype,"feature",void 0),t([s({json:{read:!1}})],a.prototype,"isValid",null),a=t([_("esri.analysis.Viewshed")],a);const T=a,F=A.ofType(T);let u=class extends se{constructor(e){super(e),this.type="viewshed",this._extent=null}initialize(){this.addHandles(L(()=>this._computeExtent(),e=>{e.pending==null&&(this._extent=e.extent)},P))}get viewsheds(){return this._get("viewsheds")||new F}set viewsheds(e){this._set("viewsheds",k(e,this.viewsheds,F))}get spatialReference(){for(const e of this.viewsheds)if(e.observer!=null)return e.observer.spatialReference;return null}get extent(){return this._extent}get requiredPropertiesForEditing(){return this.viewsheds.items.map(({observer:e})=>e)}async waitComputeExtent(){const e=this._computeExtent();e.pending!=null&&await e.pending}_computeExtent(){const{spatialReference:e}=this;if(e==null)return{pending:null,extent:null};const d=this.viewsheds.filter(r=>r.observer!=null),y=d.map(r=>r.observer).toArray(),o=B(y,e);return o.pending!=null?{pending:o.pending,extent:null}:{pending:null,extent:o.geometries.map((r,p)=>{const V=d.at(p);return r!=null&&V!=null?this._computeViewshedExtent(this.viewsheds.at(p),r):null}).filter(r=>r!=null).reduce((r,p)=>re(r,p),null)}}_computeViewshedExtent(e,d){const{farDistance:y,heading:o,tilt:r,horizontalFieldOfView:p,verticalFieldOfView:V}=e,{spatialReference:v}=d,O=p/2,$=V/2,z=y/v.metersPerUnit,S=[b.normalize(o-O),o,b.normalize(o+O)],h=K.fromPoint(d),g=f=>{const c=S.map(l=>b.normalize(l-f));if(c[0]>c[2]||p===360)return z;const w=c.map(l=>Math.abs(l>180?360-l:l)).reduce((l,x)=>l>x?x:l);return w>90?0:z*Math.cos(j(w))};h.xmax+=g(90),h.xmin-=g(-90),h.ymax+=g(0),h.ymin-=g(180);const m=d.z;if(m!=null){let f=m,c=m;const w=r-90,l=q(w+$,-90,90),x=q(w-$,-90,90),N=v!=null&&v.isGeographic?y:z;f+=N*R(l),c+=N*R(x);const C=M($)*N,E=R(w)*C*(1-M(O));r<90&&(f-=E),r>90&&(c-=E),h.zmax=Math.max(f,m),h.zmin=Math.min(c,m)}return h}clear(){this.viewsheds.removeAll()}};function re(i,e){return i==null?e:e==null?i:i.union(e)}function M(i){return Math.cos(j(i))}function R(i){return Math.sin(j(i))}t([s({type:["viewshed"]})],u.prototype,"type",void 0),t([s({cast:X,type:F,nonNullable:!0})],u.prototype,"viewsheds",null),t([s({readOnly:!0})],u.prototype,"spatialReference",null),t([s()],u.prototype,"_extent",void 0),t([s({readOnly:!0})],u.prototype,"extent",null),t([s({readOnly:!0})],u.prototype,"requiredPropertiesForEditing",null),u=t([_("esri.analysis.ViewshedAnalysis")],u);const D=u;let n=class extends Q(Y(ee)){constructor(i){super(i),this.type="viewshed",this.operationalLayerType="ViewshedLayer",this.source=new D,this.opacity=1}initialize(){this.addHandles(L(()=>this.source,(i,e)=>{e!=null&&e.parent===this&&(e.parent=null),i!=null&&(i.parent=this)},P))}async load(){return this.addResolvingPromise(this.source.waitComputeExtent()),this}get spatialReference(){return this.source.spatialReference}get fullExtent(){return this.source.extent}releaseAnalysis(i){this.source===i&&(this.source=new D)}get analysis(){return this.source}set analysis(i){this.source=i}get viewsheds(){return this.source.viewsheds}set viewsheds(i){this.source.viewsheds=i}writeViewsheds(i,e,d,y){e.viewsheds=i.filter(o=>o.isValid()).map(o=>o.toJSON(y)).toJSON()}};t([s({json:{read:!1},readOnly:!0})],n.prototype,"type",void 0),t([s({type:["ViewshedLayer"]})],n.prototype,"operationalLayerType",void 0),t([s({nonNullable:!0})],n.prototype,"source",void 0),t([s({readOnly:!0})],n.prototype,"spatialReference",null),t([s({readOnly:!0})],n.prototype,"fullExtent",null),t([s({readOnly:!0,json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],n.prototype,"opacity",void 0),t([s({type:["show","hide"]})],n.prototype,"listMode",void 0),t([s({type:A.ofType(T),json:{write:{ignoreOrigin:!0},origins:{"web-scene":{write:{ignoreOrigin:!0}}}}})],n.prototype,"viewsheds",null),t([Z("web-scene","viewsheds")],n.prototype,"writeViewsheds",null),n=t([_("esri.layers.ViewshedLayer")],n);const ce=n;export{ce as default};
