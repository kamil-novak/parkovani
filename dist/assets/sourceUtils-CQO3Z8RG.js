const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./geometryEngineJSON-CqQInlZh.js","./geometryEngineBase-DthJJtZD.js","./index-BkgwewGo.js","./index-D6MmE7Y6.css","./json-Wa8cmqdu.js"])))=>i.map(i=>d[i]);
import{dm as f,dn as m,dl as h,dp as p,dq as g,dr as y,ds as a,_ as w}from"./index-BkgwewGo.js";import{n as _}from"./date-M6n_RqpC.js";class I{constructor(){this.code=null,this.description=null}}class b{constructor(r){this.error=new I,this.globalId=null,this.objectId=null,this.success=!1,this.uniqueId=null,this.error.description=r}}function c(n){return new b(n)}class q{constructor(r){this.globalId=null,this.success=!0,this.objectId=this.uniqueId=r}}function A(n){return new q(n)}const l=new Set;function F(n,r,e,d=!1){l.clear();for(const i in e){const t=n.get(i);if(!t)continue;const o=P(t,e[i]);if(l.add(t.name),t&&(d||t.editable)){const u=f(t,o);if(u)return c(m(u,t,o));r[t.name]=o}}for(const i of(n==null?void 0:n.requiredFields)??[])if(!l.has(i.name))return c(`missing required field "${i.name}"`);return null}function P(n,r){let e=r;return h(n)&&typeof r=="string"?e=parseFloat(r):p(n)&&r!=null&&typeof r!="string"?e=String(r):g(n)&&typeof r=="string"&&(e=_(r)),y(e)}let s;function G(n,r){if(!n||!a(r))return n;if("rings"in n||"paths"in n){if(s==null)throw new TypeError("geometry engine not loaded");return s.simplify(r,n)}return n}async function j(){return s==null&&(s=await w(()=>import("./geometryEngineJSON-CqQInlZh.js").then(n=>n.g),__vite__mapDeps([0,1,2,3,4]),import.meta.url)),s}async function S(n,r){!a(n)||r!=="esriGeometryPolygon"&&r!=="esriGeometryPolyline"||await j()}export{A as d,c as f,S as j,F as p,G as y};
